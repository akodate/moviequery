// Generated by CoffeeScript 1.7.1
(function() {
  "use strict";
  var MoviePanel;

  this.movieApp = angular.module('movieApp', []);

  MoviePanel = (function() {
    function MoviePanel($scope, $http) {
      this.$scope = $scope;
      this.$http = $http;
      $scope.searchInput = "";
      $scope.dropDownInvisible = true;
      $scope.movieInfoInvisible = true;
      $scope.search = function() {
        var results, searchTerm;
        if ($scope.searchInput) {
          $scope.movieList = [];
          $scope.dropDownInvisible = true;
          searchTerm = $scope.searchInput;
          $http({
            url: "http://www.omdbapi.com/",
            method: "get",
            params: {
              s: searchTerm
            }
          }).success(function(data, status, headers, config) {
            console.log("data: " + data + "status: " + status + "headers:" + headers + "config: " + config);
            return results(data);
          }).error(function(data, status, headers, config) {
            return $scope.status = status;
          });
          return results = function(data) {
            var movie, _i, _len, _ref, _results;
            $scope.loadingGif = true;
            if (data.Response !== 'False') {
              $scope.movieList = [];
              $scope.dropDownInvisible = false;
              _ref = data["Search"];
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                movie = _ref[_i];
                _results.push($scope.movieList.push(movie));
              }
              return _results;
            }
          };
        }
      };
      $scope.searchPick = function(movie) {
        var imdbInfo;
        $scope.movieInfo = {};
        $scope.dropDownInvisible = true;
        $scope.movieInfoInvisible = false;
        $http({
          url: "http://www.omdbapi.com/",
          method: "get",
          params: {
            i: movie.imdbID
          }
        }).success(function(data, status, headers, config) {
          console.log("data: " + data + "status: " + status + "headers:" + headers + "config: " + config + "imdbID: " + movie.imdbID);
          return imdbInfo(data);
        }).error(function(data, status, headers, config) {
          return $scope.status = status;
        });
        return imdbInfo = function(data) {
          var info, key, _results;
          _results = [];
          for (key in data) {
            info = data[key];
            _results.push($scope.movieInfo[key] = info);
          }
          return _results;
        };
      };
      $scope.infoFilter = function(mInfo) {
        var info, key;
        if (mInfo) {
          $scope.arr = {};
          for (key in mInfo) {
            info = mInfo[key];
            if (key !== 'Poster' && key !== 'Title' && key !== 'imdbID' && key !== 'Response' && key !== 'Release' && key !== null) {
              if (key === 'imdbRating' || key === 'imdbVotes') {
                key = key.slice(0, 4).toUpperCase() + ' ' + key.slice(4);
              }
              if (key === 'Type') {
                info = info[0].toUpperCase();
              }
              $scope.arr[key] = info;
            }
          }
          return $scope.arr;
        }
      };
    }

    return MoviePanel;

  })();

  MoviePanel.$inject = ["$scope", "$http"];

  movieApp.controller("MoviePanel", MoviePanel);

}).call(this);
